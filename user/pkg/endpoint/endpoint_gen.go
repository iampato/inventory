// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/iampato/inventory/user/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateRoleEndpoint  endpoint.Endpoint
	GetAllRolesEndpoint endpoint.Endpoint
	CreateEndpoint      endpoint.Endpoint
	GetAllUsersEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.UserService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateEndpoint:      MakeCreateEndpoint(s),
		CreateRoleEndpoint:  MakeCreateRoleEndpoint(s),
		GetAllRolesEndpoint: MakeGetAllRolesEndpoint(s),
		GetAllUsersEndpoint: MakeGetAllUsersEndpoint(s),
	}
	for _, m := range mdw["CreateRole"] {
		eps.CreateRoleEndpoint = m(eps.CreateRoleEndpoint)
	}
	for _, m := range mdw["GetAllRoles"] {
		eps.GetAllRolesEndpoint = m(eps.GetAllRolesEndpoint)
	}
	for _, m := range mdw["Create"] {
		eps.CreateEndpoint = m(eps.CreateEndpoint)
	}
	for _, m := range mdw["GetAllUsers"] {
		eps.GetAllUsersEndpoint = m(eps.GetAllUsersEndpoint)
	}
	return eps
}
